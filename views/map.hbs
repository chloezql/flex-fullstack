 <style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height: 600px;
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
    </style>


    <div id="map"></div>
    <div id="msg"></div>
    <div id="lat" value={{latitude}}></div>
    <div id="lng" value={{longitude}}></div>
    <script>
      // Note: This example requires that you consent to location sharing when
      // prompted by your browser. If you see the error "The Geolocation service
      // failed.", it means you probably did not give permission for the browser to
      // locate you.
      var map, infoWindow;
      function haversine_distance(mk1, mk2) {
      var R = 3958.8; // Radius of the Earth in miles
      var rlat1 = mk1.position.lat() * (Math.PI/180); // Convert degrees to radians
      var rlat2 = mk2.position.lat() * (Math.PI/180); // Convert degrees to radians
      var difflat = rlat2-rlat1; // Radian difference (latitudes)
      var difflon = (mk2.position.lng()-mk1.position.lng()) * (Math.PI/180); // Radian difference (longitudes)

      var d = 2 * R * Math.asin(Math.sqrt(Math.sin(difflat/2)*Math.sin(difflat/2)+Math.cos(rlat1)*Math.cos(rlat2)*Math.sin(difflon/2)*Math.sin(difflon/2)));
      return d;
    }

      function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: 40.7100491, lng: -74.0073830},
          zoom: 6
        });
        infoWindow = new google.maps.InfoWindow;

        // Try HTML5 geolocation.
        

        const frick = {lat: document.getElementById('lat').value, lng:document.getElementById('lng').value};
        const center = {lat: 40.7100491, lng: -74.0073830};
         //The markers for The Dakota and The Frick Collection
        var mk1 = new google.maps.Marker({position: center, map: map});
        var mk2 = new google.maps.Marker({position: frick, map: map});
        var line = new google.maps.Polyline({path: [center, frick], map: map});
        // Calculate and display the distance between markers
        var distance = haversine_distance(mk1, mk2);
        document.getElementById('msg').innerHTML = "Distance between markers: " + distance.toFixed(2) + " mi.";
        
        let directionsService = new google.maps.DirectionsService();
        let directionsRenderer = new google.maps.DirectionsRenderer();
        directionsRenderer.setMap(map); // Existing map object displays directions
        // Create route from existing points used for markers
        const route = {
            origin: center,
            destination: frick,
            travelMode: 'DRIVING'
        }

        directionsService.route(route,
          function(response, status) { // anonymous function to capture directions
            if (status !== 'OK') {
              window.alert('Directions request failed due to ' + status);
              return;
            } else {
              directionsRenderer.setDirections(response); // Add route to the map
              var directionsData = response.routes[0].legs[0]; // Get data about the mapped route
              if (!directionsData) {
                window.alert('Directions request failed');
                return;
              }
              else {
                document.getElementById('msg').innerHTML += " Driving distance is " + directionsData.distance.text + " (" + directionsData.duration.text + ").";
              }
            }
          });
      }

      function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        infoWindow.setPosition(pos);
        infoWindow.setContent(browserHasGeolocation ?
                              'Error: The Geolocation service failed.' :
                              'Error: Your browser doesn\'t support geolocation.');
        infoWindow.open(map);
      }
    </script>
    <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCuFTp1A7mfpf9o8pdTwkkLpu0Qf_I6wZM&callback=initMap">
    </script>